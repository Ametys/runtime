<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright 2015 Anyware Services

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
   -->
<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">
    
    <!-- =========================== Components ================================ -->
    
    <map:components>
        <map:generators>
            <map:generator name="workspace" src="org.ametys.plugins.core.ui.WorkspaceGenerator" logger="org.ametys.runtime.workspace.WorkspaceGenerator"/>
            <map:generator name="user-prefs" src="org.ametys.plugins.core.userpref.UserPreferencesValuesGenerator"/>
        </map:generators>
        
        <map:actions>
            <map:action name="authenticate" src="org.ametys.runtime.workspaces.admin.authentication.AdminAuthenticateAction" logger="org.ametys.runtime.workspaces.admin.sitemap.action.authentication"/>
            <map:action name="set-authorization-header" src="org.ametys.runtime.workspaces.admin.authentication.SetAuthorizationHeaderAction"  logger="org.ametys.runtime.workspaces.admin.sitemap.action.setheader"/>
            <map:action name="resource-exists" src="org.apache.cocoon.acting.ResourceExistsAction"/>
        </map:actions>
        
        <map:transformers>
            <map:transformer name="minimizer" src="org.ametys.plugins.core.ui.minimize.MinimizeTransformer"/>
        </map:transformers>
        
         <map:selectors default="exception">
            <map:selector logger="sitemap.selector.exception" name="exception" src="org.apache.cocoon.selection.ExceptionSelector">
                <exception class="org.apache.cocoon.ResourceNotFoundException" name="not-found"/>
                <exception class="org.ametys.runtime.authentication.AccessDeniedException" name="access-denied"/>
                <exception class="org.ametys.runtime.authentication.AuthorizationRequiredException" name="authorization-required"/>
                <!-- The statement below tells the selector to unroll as much exceptions as possible -->
                <exception class="java.lang.Throwable" unroll="true"/>
            </map:selector>
        </map:selectors>   
    </map:components>
    
    <!-- =========================== Views =================================== -->

    <map:views>
        <map:view name="content" from-label="content">
            <map:serialize type="xml"/>
        </map:view>
    </map:views>
    
    <!-- =========================== Pipelines ================================= -->
    
    <map:pipelines>
    
        <map:pipeline internal-only="true">
            <map:match pattern="workspace.xml">
                <map:generate type="workspace">
                    <!-- File names for ribbon and ui-tools can be defined here. Removed the 
                         parameters to use the default values (ribbon and uitools) -->
                    <map:parameter name="ribbonFileName" value="admin-ribbon"/>
                    <map:parameter name="toolsFileName" value="admin-uitools"/>
                </map:generate>
                <map:serialize type="xml"/>
            </map:match>
	        
	        <map:match pattern="userprefs/values.xml">
                <map:generate type="user-prefs"/>
                <map:serialize type="xml"/>
            </map:match>
        </map:pipeline>
            
        <map:pipeline>
            <map:match pattern="resources/**.js">
                <!-- FIXME temporary compatible with .i18nfiles -->
                <map:act type="resource-exists" src="resources/{1}.js">
                    <map:generate src="resources/{../1}.js" type="i18nizabletext"/>
                    <map:transform type="i18n">
                        <map:parameter name="locale" value="{locale:locale}"/>
                        <map:parameter name="workspace" value="workspace"/><!-- Workspace name have to be hardcoded -->
                    </map:transform>
                    <map:serialize type="text" mime-type="text/javascript;charset=utf-8"/>
                </map:act>
                <map:generate src="resources/{1}.i18n.js" type="i18nizabletext"/>
                <map:transform type="i18n">
                    <map:parameter name="locale" value="{locale:locale}"/>
                    <map:parameter name="workspace" value="workspace"/><!-- Workspace name have to be hardcoded since it can be call through the web workspace -->
                </map:transform>
                <map:serialize type="text" mime-type="text/javascript;charset=utf-8"/>
            </map:match>
            
            <!-- Workspace resources -->
            <map:match pattern="resources/**">
                <map:read src="resources/{1}"/>
            </map:match>
            
            <!-- base redirection -->
            <map:match pattern="">
                <map:redirect-to uri="index.html"/>
            </map:match>
            
            <!-- unauthenticated pages -->
            <map:match pattern="public/unsupported-browser.html">
                <map:generate type="action-result"/>
                <map:transform src="plugin:core-ui://pages/public/{1}.xsl">
                    <map:parameter name="contextPath" value="{request:contextPath}"/>
                    <map:parameter name="workspaceName" value="{request-attr:workspaceName}"/>
                    <map:parameter name="workspaceURI" value="{request-attr:workspaceURI}"/>
                    
                    <map:parameter name="redirect" value="{request-param:uri}"/>
                    <map:parameter name="doc" value="{request-param:doc}"/>
                    
                    <map:parameter name="browser" value="{request-param:browser}"/>
                    <map:parameter name="browserversion" value="{request-param:browserversion}"/>
                    <map:parameter name="supported" value="{request-param:supported}"/>
                </map:transform>
                <map:transform type="i18n">
                    <map:parameter name="locale" value="{locale:locale}"/>
                    <map:parameter name="workspace" value="{request-attr:workspaceName}"/>
                </map:transform>
                <!-- Do not minimize here. See RUNTIME-877 -->
                <!-- No HTML5 here -->
                <map:serialize/>
            </map:match>
            
			<map:match pattern="public/*.html">
				<map:generate type="action-result"/>
				<map:transform src="plugin:core-ui://pages/public/{1}.xsl">
					<map:parameter name="contextPath" value="{request:contextPath}"/>
                    <map:parameter name="workspaceName" value="{request-attr:workspaceName}"/>
                    <map:parameter name="workspaceURI" value="{request-attr:workspaceURI}"/>
				</map:transform>
				<map:transform type="i18n">
					<map:parameter name="locale" value="{locale:locale}"/>
                    <map:parameter name="workspace" value="{request-attr:workspaceName}"/>
				</map:transform>
                <!-- Do not minimize here. See RUNTIME-877 -->
				<map:serialize type="xhtml5"/>
			</map:match>
            
            <!-- ************** -->
            <!-- AUTHENTICATION -->
            <!-- ************** -->
            <map:match pattern="**">
                <map:act type="authenticate"/>
            </map:match>
            
            <map:match pattern="index.html">
                <map:aggregate element="Ametys">
                    <map:part src="cocoon://_plugins/core/versions.xml"/>
                    <map:part src="cocoon:/workspace.xml"/>
                    <map:part src="cocoon:/userprefs/values.xml?prefContext=/admin"/>
                </map:aggregate>
                <map:transform type="i18n">
                    <map:parameter name="locale" value="{locale:locale}"/>
                </map:transform>
                <map:transform type="xslt" src="stylesheets/index.xsl"/>
                <map:transform type="i18n">
                    <map:parameter name="locale" value="{locale:locale}"/>
                </map:transform>
                <map:transform type="minimizer" src="{request:contextPath}{request-attr:workspaceURI}/plugins/core">
                    <map:parameter name="debug-mode-request" value="{request-param:debug.ui}"/>
                </map:transform>
                <map:serialize type="xhtml"/>
            </map:match>
            
            <!-- Direct plugins url -->
            <map:match pattern="plugins/*/**">
                <map:act type="setter">
                    <map:parameter name="pluginName" value="{1}"/>
                </map:act>
                <map:mount check-reload="yes" src="plugin:{1}://" uri-prefix="plugins/{1}"/>
            </map:match>
            
            <!-- ERRORS -->
            <map:handle-errors>
                <map:select type="exception">
                    <map:when test="not-found">
                        <map:act type="exception" src="404">
                            <map:generate type="exception" label="content"/>
                            <map:transform src="{xsl}">
                                <map:parameter name="realPath" value="{realpath:}"/>
                                <map:parameter name="contextPath" value="{request:contextPath}"/>
                                <map:parameter name="code" value="404"/>
                                <map:parameter name="pageTitle" value="Page not found"/>
                            </map:transform>
                            <map:transform type="i18n">
                                <map:parameter name="locale" value="{locale:locale}"/>
                            </map:transform>
                            <map:serialize status-code="404"/>
                        </map:act>
                    </map:when>
                    <map:when test="authorization-required">
                        <!-- Basic authentication needs to set a special header when this exception is thrown -->
                        <map:act type="set-authorization-header"/>
                        <map:act type="exception" src="401">
                            <map:generate type="exception" label="content"/>
                            <map:transform src="{xsl}">
                                <map:parameter name="realPath" value="{realpath:}"/>
                                <map:parameter name="contextPath" value="{request:contextPath}"/>
                                <map:parameter name="code" value="401"/>
                                <map:parameter name="pageTitle" value="Authorization required"/>
                            </map:transform>
                            <map:transform type="i18n">
                                <map:parameter name="locale" value="{locale:locale}"/>
                            </map:transform>
                            <map:serialize status-code="401"/>                      
                        </map:act>
                    </map:when>
                    <map:when test="access-denied">
                        <map:act type="exception" src="403">
                            <map:generate type="exception" label="content"/>
                            <map:transform src="{xsl}">
                                <map:parameter name="realPath" value="{realpath:}"/>
                                <map:parameter name="contextPath" value="{request:contextPath}"/>
                                <map:parameter name="code" value="403"/>
                                <map:parameter name="pageTitle" value="Access denied"/>
                            </map:transform>
                            <map:transform type="i18n">
                                <map:parameter name="locale" value="{locale:locale}"/>
                            </map:transform>
                            <map:serialize status-code="403"/>                      
                        </map:act>
                    </map:when>
                    <map:otherwise>
                        <map:act type="exception" src="500">
                            <map:generate type="exception" label="content"/>
                            <map:transform src="{xsl}">
                                <map:parameter name="realPath" value="{realpath:}"/>
                                <map:parameter name="contextPath" value="{request:contextPath}"/>
                                <map:parameter name="code" value="500"/>
                                <map:parameter name="pageTitle" value="An error occured"/>
                            </map:transform>
                            <map:transform type="i18n">
                                <map:parameter name="locale" value="{locale:locale}"/>
                            </map:transform>
                            <map:serialize status-code="500"/>
                        </map:act>
                    </map:otherwise>
                </map:select>
            </map:handle-errors>
		</map:pipeline>
	</map:pipelines>
</map:sitemap>
